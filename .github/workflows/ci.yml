name: Go CI/CD Pipeline

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "main", "develop" ]

jobs:
  build:
    runs-on: ubuntu-latest
    container: golang:1.23.8-alpine
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Build Go binary
      run: |
        go mod download
        CGO_ENABLED=0 GOOS=linux go build -o bin/main ./cmd/main.go
        mkdir -p release
        cp bin/main docker-compose.yml docker-compose.prod.yml Dockerfile release/
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: app-artifacts
        path: |
          release/
          db_init/

  test:
    needs: build
    runs-on: ubuntu-latest
    container: golang:1.23.8-alpine
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: app-artifacts
    
    - name: Run tests
      run: |
        go test -v ./...
        go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.59.1
        golangci-lint run || true

  deploy:
    needs: [build, test]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: app-artifacts
    
    - name: Setup SSH
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        SSH_HOST: ${{ secrets.SSH_HOST }}
      run: |
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H $SSH_HOST >> ~/.ssh/known_hosts
    
    - name: Deploy to production
      env:
        SSHPASSWORD: ${{ secrets.SSHPASSWORD }}
      run: |
        sshpass -p "$SSHPASSWORD" ssh gitlab-runner@${{ secrets.SSH_HOST }} "mkdir -p ~/app/db_init"
        sshpass -p "$SSHPASSWORD" scp -r release/* .env db_init/* gitlab-runner@${{ secrets.SSH_HOST }}:~/app/
        sshpass -p "$SSHPASSWORD" ssh gitlab-runner@${{ secrets.SSH_HOST }} "cd ~/app && docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d"
