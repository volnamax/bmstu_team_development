name: Go CI/CD Pipeline

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "main", "develop" ]

jobs:
  build:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Build Go binary
        run: |
          echo "Building Go binary..."
          go mod download
          CGO_ENABLED=0 GOOS=linux go build -o bin/main ./cmd/main.go

      - name: Build and Push Docker Image
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "Building Docker image..."
          docker build -t $DOCKERHUB_USERNAME/todolist:latest .
          
          echo "Logging in to Docker Hub..."
          echo $DOCKERHUB_TOKEN | docker login -u $DOCKERHUB_USERNAME --password-stdin
          
          echo "Pushing Docker image..."
          docker push $DOCKERHUB_USERNAME/todolist:latest

  deploy-prod:
    needs: build
    runs-on: self-hosted
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    steps:
      - name: Deploy to VM1
        env:
          SSHPASS: ${{ secrets.SSHPASSWORD }}
          SSHHOST: ${{ secrets.SSHHOST }}
        run: |
          echo "Deploying to production on VM1..."
          sshpass -p "$SSHPASS" ssh -o StrictHostKeyChecking=no gitlab-runner@$SSHHOST << EOF
            echo "Pulling the latest image..."
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/todolist:latest

            echo "Recreating containers..."
            docker-compose -f docker-compose.yml -f docker-compose.prod.yml down -v || true
            docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d

            echo "Deployment complete on VM1!"
          EOF
